<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>为人民服务</title>
  
  <subtitle>人生就是一段旅行,不在乎沿途风景,而在乎是谁的陪同</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-12T13:41:23.265Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>吴才益</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>冒泡排序C语言实现</title>
    <link href="http://yoursite.com/2019/12/12/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2019/12/12/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</id>
    <published>2019-12-11T16:00:00.000Z</published>
    <updated>2019-12-12T13:41:23.265Z</updated>
    
    <content type="html"><![CDATA[<h1 id="冒泡算法排序"><a href="#冒泡算法排序" class="headerlink" title="冒泡算法排序"></a>冒泡算法排序</h1><blockquote><p>冒泡算法是一种交换排序,每一个将最大/最小的数字 移动到末尾</p></blockquote><h2 id="思考"><a href="#思考" class="headerlink" title="思考:"></a>思考:</h2><ol><li>假设有n个数,每次遍历将最大/最小的数字交换到最后.</li><li>对剩下的n-1个数重复1的步骤.</li><li>当只剩下一个数字,或者某次遍历过程未发生交换时,排序结束.</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h2><p><strong>bubbleSort.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span> keys[], <span class="keyword">int</span> n, <span class="keyword">int</span> asc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> exchange = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n &amp;&amp; exchange; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        exchange = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (asc ? keys[j] &gt; keys[j + <span class="number">1</span>] : keys[j] &lt; keys[j + <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                swap(keys, j, j + <span class="number">1</span>);</span><br><span class="line">                exchange = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;冒泡算法排序&quot;&gt;&lt;a href=&quot;#冒泡算法排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡算法排序&quot;&gt;&lt;/a&gt;冒泡算法排序&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;冒泡算法是一种交换排序,每一个将最大/最小的数字 移动到末尾&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="冒泡排序" scheme="http://yoursite.com/tags/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    
      <category term="bubbleSort" scheme="http://yoursite.com/tags/bubbleSort/"/>
    
  </entry>
  
  <entry>
    <title>输出100内的素数</title>
    <link href="http://yoursite.com/2019/12/12/%E8%BE%93%E5%87%BA100%E5%86%85%E7%9A%84%E7%B4%A0%E6%95%B0/"/>
    <id>http://yoursite.com/2019/12/12/%E8%BE%93%E5%87%BA100%E5%86%85%E7%9A%84%E7%B4%A0%E6%95%B0/</id>
    <published>2019-12-11T16:00:00.000Z</published>
    <updated>2019-12-12T13:44:01.702Z</updated>
    
    <content type="html"><![CDATA[<h1 id="输出100内素数的C语言实现"><a href="#输出100内素数的C语言实现" class="headerlink" title="输出100内素数的C语言实现"></a>输出100内素数的C语言实现</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义:"></a>定义:</h2><blockquote><p>素数(质数)在大于1的自然数中，除了1和该数自身外，无法被其他自然数整除的数</p></blockquote><h2 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h2><ol><li>假定一个大于1的整数n是素数(从2开始)</li><li>那么n%i(i=2,3,.,.,.,n-1)都不等于0,那么这个数字是素数.</li><li>输出数字n.</li></ol><h2 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h2><p><strong>isPrime.c</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">int</span> isPrime = <span class="number">1</span>;<span class="comment">//假设i是素数</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt; i; j++)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span> (i % j == <span class="number">0</span>)<span class="comment">//不满足素数条件</span></span><br><span class="line">          &#123;</span><br><span class="line">              isPrime = <span class="number">0</span>;<span class="comment">//确认这个数不是素数</span></span><br><span class="line">              <span class="keyword">break</span>;<span class="comment">//跳出这个循环</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (isPrime)<span class="comment">//判断i是不是素数</span></span><br><span class="line">      &#123;</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, i);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;输出100内素数的C语言实现&quot;&gt;&lt;a href=&quot;#输出100内素数的C语言实现&quot; class=&quot;headerlink&quot; title=&quot;输出100内素数的C语言实现&quot;&gt;&lt;/a&gt;输出100内素数的C语言实现&lt;/h1&gt;&lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot;
      
    
    </summary>
    
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
</feed>
